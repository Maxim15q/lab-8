import cv2
import numpy as np

# определяем словарь и размер маркера
dictionary = cv2.aruco.Dictionary_get(cv2.aruco.DICT_6X6_250)
marker_size = 100

# определяем параметры для обнаружения маркеров
parameters = cv2.aruco.DetectorParameters_create()

# загружаем камеру
cap = cv2.VideoCapture(0)

while True:
    #  считываем кадр с камеры
    ret, frame = cap.read()

    # определяем маркеры в кадре
    corners, ids, rejected = cv2.aruco.detectMarkers(frame, dictionary, parameters=parameters)

    # если маркер обнаружен, рисуем его на кадре
    if ids is not None:
        # разделяем маркер на две половины
        half_width = int(corners[0][0][1][0] - corners[0][0][0][0]) // 2
        left_half = np.array([[[corners[0][0][0][0], corners[0][0][0][1]],
                               [corners[0][0][0][0] + half_width, corners[0][0][0][1]],
                               [corners[0][0][1][0] - half_width, corners[0][0][1][1]],
                               [corners[0][0][1][0], corners[0][0][1][1]]]], dtype=np.float32)
        right_half = np.array([[[corners[0][0][1][0] - half_width, corners[0][0][1][1]],
                                [corners[0][0][1][0], corners[0][0][1][1]],
                                [corners[0][0][2][0], corners[0][0][2][1]],
                                [corners[0][0][2][0] - half_width, corners[0][0][2][1]]]], dtype=np.float32)

        # рисуем левую половину маркера на кадре
        cv2.aruco.drawDetectedMarkers(frame, left_half, ids)

        # получаем положение и ориентацию левой половины маркера
        rvecs_left, tvecs_left, _ = cv2.aruco.estimatePoseSingleMarkers(left_half, marker_size, cameraMatrix, distCoeffs)

        # рисуем ось для левой половины маркера
        cv2.aruco.drawAxis(frame, cameraMatrix, distCoeffs, rvecs_left, tvecs_left, marker_size)

        # рисуем правую половину маркера на кадре
        cv2.aruco.drawDetectedMarkers(frame, right_half, ids)

        # получаем положение и ориентацию правой половины маркера
        rvecs_right, tvecs_right, _ = cv2.aruco.estimatePoseSingleMarkers(right_half, marker_size, cameraMatrix, distCoeffs)

        # рисуем ось для правой половины маркера
        cv2.aruco.drawAxis(frame, cameraMatrix, distCoeffs, rvecs_right, tvecs_right, marker_size)

    # отображаем кадр
    cv2.imshow('frame', frame)

    # выходим из цикла
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# освобождаем камеру и закрываем окно
cap.release()
cv2.destroyAllWindows()
